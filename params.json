{"name":"Acquire.js","tagline":"Acquire function allows you to synchronously and asynchronously initialize Javascript modules in your browser. It behaves like Node.js’s require(), meaning it exposes module.exports.","body":"<img src=\"http://jochemstoel.github.io/img/acquire-img.jpg\">\r\n\r\nAcquire function allows you to synchronously and asynchronously initialize Javascript modules in your browser. It behaves like Node.js’s require(), meaning it exposes <i>module.exports</i>. It can be used to load modules from your local or external host.\r\n\r\n## Include on page\r\n```html\r\n<script type=\"application/javascript\" src=\"acquire.js\"></script>\r\n```\r\n\r\n## Synchronous\r\n```javascript\r\n/* Synchronous XMLHttp requests are deprecated. */\r\nvar myfunction = acquire('somefile');\r\n```\r\n\r\n## aSynchronous\r\n```javascript\r\nacquire('somefile', function(exp)\r\n{\r\n  exp('There is no spoon.'); // exp equals module.exports\r\n});\r\n```\r\n\r\n## Expose to window\r\nExpose asynchronously loaded modules to the global window object.\r\n\r\n```javascript\r\nacquire('somefile', function(exp)\r\n{\r\n  window.mymodule = exp;\r\n});\r\n``` \r\n## Load modules from a different domain\r\nDon’t forget to define the allowed request origin in your .htaccess file if you want to load packages from a different domain.\r\n\r\nAdd te following code to your .htaccess file to allow XMLHttpRequests from other domains. \r\n```conf\r\nRewriteEngine on\r\nHeader add Access-Control-Allow-Origin \"*\"\r\nHeader add Access-Control-Allow-Headers \"origin, x-requested-with, content-type\"\r\nHeader add Access-Control-Allow-Methods \"PUT, GET, POST, DELETE, OPTIONS\"\r\n```\r\n\r\nIf you need to enable Apache Headers Module, open a terminal and type the following:\r\n```bash\r\na2enmod headers\r\nservice apache2 restart\r\n``` \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}